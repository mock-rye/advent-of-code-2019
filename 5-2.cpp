#include <iostream>
#include <vector>
#include <cmath>
using namespace std;

vector<int> buildDiag(){ //enter the cheats
	vector<int> diagnostic;
	diagnostic.push_back(3);
	diagnostic.push_back(225);
	diagnostic.push_back(1);
	diagnostic.push_back(225);
	diagnostic.push_back(6);
	diagnostic.push_back(6);
	diagnostic.push_back(1100);
	diagnostic.push_back(1);
	diagnostic.push_back(238);
	diagnostic.push_back(225);
	diagnostic.push_back(104);
	diagnostic.push_back(0);
	diagnostic.push_back(1102);
	diagnostic.push_back(35);
	diagnostic.push_back(92);
	diagnostic.push_back(225);
	diagnostic.push_back(1101);
	diagnostic.push_back(25);
	diagnostic.push_back(55);
	diagnostic.push_back(225);
	diagnostic.push_back(1102);
	diagnostic.push_back(47);
	diagnostic.push_back(36);
	diagnostic.push_back(225);
	diagnostic.push_back(1102);
	diagnostic.push_back(17);
	diagnostic.push_back(35);
	diagnostic.push_back(225);
	diagnostic.push_back(1);
	diagnostic.push_back(165);
	diagnostic.push_back(18);
	diagnostic.push_back(224);
	diagnostic.push_back(1001);
	diagnostic.push_back(224);
	diagnostic.push_back(-106);
	diagnostic.push_back(224);
	diagnostic.push_back(4);
	diagnostic.push_back(224);
	diagnostic.push_back(102);
	diagnostic.push_back(8);
	diagnostic.push_back(223);
	diagnostic.push_back(223);
	diagnostic.push_back(1001);
	diagnostic.push_back(224);
	diagnostic.push_back(3);
	diagnostic.push_back(224);
	diagnostic.push_back(1);
	diagnostic.push_back(223);
	diagnostic.push_back(224);
	diagnostic.push_back(223);
	diagnostic.push_back(1101);
	diagnostic.push_back(68);
	diagnostic.push_back(23);
	diagnostic.push_back(224);
	diagnostic.push_back(101);
	diagnostic.push_back(-91);
	diagnostic.push_back(224);
	diagnostic.push_back(224);
	diagnostic.push_back(4);
	diagnostic.push_back(224);
	diagnostic.push_back(102);
	diagnostic.push_back(8);
	diagnostic.push_back(223);
	diagnostic.push_back(223);
	diagnostic.push_back(101);
	diagnostic.push_back(1);
	diagnostic.push_back(224);
	diagnostic.push_back(224);
	diagnostic.push_back(1);
	diagnostic.push_back(223);
	diagnostic.push_back(224);
	diagnostic.push_back(223);
	diagnostic.push_back(2);
	diagnostic.push_back(217);
	diagnostic.push_back(13);
	diagnostic.push_back(224);
	diagnostic.push_back(1001);
	diagnostic.push_back(224);
	diagnostic.push_back(-1890);
	diagnostic.push_back(224);
	diagnostic.push_back(4);
	diagnostic.push_back(224);
	diagnostic.push_back(102);
	diagnostic.push_back(8);
	diagnostic.push_back(223);
	diagnostic.push_back(223);
	diagnostic.push_back(1001);
	diagnostic.push_back(224);
	diagnostic.push_back(6);
	diagnostic.push_back(224);
	diagnostic.push_back(1);
	diagnostic.push_back(224);
	diagnostic.push_back(223);
	diagnostic.push_back(223);
	diagnostic.push_back(1102);
	diagnostic.push_back(69);
	diagnostic.push_back(77);
	diagnostic.push_back(224);
	diagnostic.push_back(1001);
	diagnostic.push_back(224);
	diagnostic.push_back(-5313);
	diagnostic.push_back(224);
	diagnostic.push_back(4);
	diagnostic.push_back(224);
	diagnostic.push_back(1002);
	diagnostic.push_back(223);
	diagnostic.push_back(8);
	diagnostic.push_back(223);
	diagnostic.push_back(101);
	diagnostic.push_back(2);
	diagnostic.push_back(224);
	diagnostic.push_back(224);
	diagnostic.push_back(1);
	diagnostic.push_back(224);
	diagnostic.push_back(223);
	diagnostic.push_back(223);
	diagnostic.push_back(102);
	diagnostic.push_back(50);
	diagnostic.push_back(22);
	diagnostic.push_back(224);
	diagnostic.push_back(101);
	diagnostic.push_back(-1800);
	diagnostic.push_back(224);
	diagnostic.push_back(224);
	diagnostic.push_back(4);
	diagnostic.push_back(224);
	diagnostic.push_back(1002);
	diagnostic.push_back(223);
	diagnostic.push_back(8);
	diagnostic.push_back(223);
	diagnostic.push_back(1001);
	diagnostic.push_back(224);
	diagnostic.push_back(5);
	diagnostic.push_back(224);
	diagnostic.push_back(1);
	diagnostic.push_back(224);
	diagnostic.push_back(223);
	diagnostic.push_back(223);
	diagnostic.push_back(1102);
	diagnostic.push_back(89);
	diagnostic.push_back(32);
	diagnostic.push_back(225);
	diagnostic.push_back(1001);
	diagnostic.push_back(26);
	diagnostic.push_back(60);
	diagnostic.push_back(224);
	diagnostic.push_back(1001);
	diagnostic.push_back(224);
	diagnostic.push_back(-95);
	diagnostic.push_back(224);
	diagnostic.push_back(4);
	diagnostic.push_back(224);
	diagnostic.push_back(102);
	diagnostic.push_back(8);
	diagnostic.push_back(223);
	diagnostic.push_back(223);
	diagnostic.push_back(101);
	diagnostic.push_back(2);
	diagnostic.push_back(224);
	diagnostic.push_back(224);
	diagnostic.push_back(1);
	diagnostic.push_back(223);
	diagnostic.push_back(224);
	diagnostic.push_back(223);
	diagnostic.push_back(1102);
	diagnostic.push_back(51);
	diagnostic.push_back(79);
	diagnostic.push_back(225);
	diagnostic.push_back(1102);
	diagnostic.push_back(65);
	diagnostic.push_back(30);
	diagnostic.push_back(225);
	diagnostic.push_back(1002);
	diagnostic.push_back(170);
	diagnostic.push_back(86);
	diagnostic.push_back(224);
	diagnostic.push_back(101);
	diagnostic.push_back(-2580);
	diagnostic.push_back(224);
	diagnostic.push_back(224);
	diagnostic.push_back(4);
	diagnostic.push_back(224);
	diagnostic.push_back(102);
	diagnostic.push_back(8);
	diagnostic.push_back(223);
	diagnostic.push_back(223);
	diagnostic.push_back(1001);
	diagnostic.push_back(224);
	diagnostic.push_back(6);
	diagnostic.push_back(224);
	diagnostic.push_back(1);
	diagnostic.push_back(223);
	diagnostic.push_back(224);
	diagnostic.push_back(223);
	diagnostic.push_back(101);
	diagnostic.push_back(39);
	diagnostic.push_back(139);
	diagnostic.push_back(224);
	diagnostic.push_back(1001);
	diagnostic.push_back(224);
	diagnostic.push_back(-128);
	diagnostic.push_back(224);
	diagnostic.push_back(4);
	diagnostic.push_back(224);
	diagnostic.push_back(102);
	diagnostic.push_back(8);
	diagnostic.push_back(223);
	diagnostic.push_back(223);
	diagnostic.push_back(101);
	diagnostic.push_back(3);
	diagnostic.push_back(224);
	diagnostic.push_back(224);
	diagnostic.push_back(1);
	diagnostic.push_back(223);
	diagnostic.push_back(224);
	diagnostic.push_back(223);
	diagnostic.push_back(1102);
	diagnostic.push_back(54);
	diagnostic.push_back(93);
	diagnostic.push_back(225);
	diagnostic.push_back(4);
	diagnostic.push_back(223);
	diagnostic.push_back(99);
	diagnostic.push_back(0);
	diagnostic.push_back(0);
	diagnostic.push_back(0);
	diagnostic.push_back(677);
	diagnostic.push_back(0);
	diagnostic.push_back(0);
	diagnostic.push_back(0);
	diagnostic.push_back(0);
	diagnostic.push_back(0);
	diagnostic.push_back(0);
	diagnostic.push_back(0);
	diagnostic.push_back(0);
	diagnostic.push_back(0);
	diagnostic.push_back(0);
	diagnostic.push_back(0);
	diagnostic.push_back(1105);
	diagnostic.push_back(0);
	diagnostic.push_back(99999);
	diagnostic.push_back(1105);
	diagnostic.push_back(227);
	diagnostic.push_back(247);
	diagnostic.push_back(1105);
	diagnostic.push_back(1);
	diagnostic.push_back(99999);
	diagnostic.push_back(1005);
	diagnostic.push_back(227);
	diagnostic.push_back(99999);
	diagnostic.push_back(1005);
	diagnostic.push_back(0);
	diagnostic.push_back(256);
	diagnostic.push_back(1105);
	diagnostic.push_back(1);
	diagnostic.push_back(99999);
	diagnostic.push_back(1106);
	diagnostic.push_back(227);
	diagnostic.push_back(99999);
	diagnostic.push_back(1106);
	diagnostic.push_back(0);
	diagnostic.push_back(265);
	diagnostic.push_back(1105);
	diagnostic.push_back(1);
	diagnostic.push_back(99999);
	diagnostic.push_back(1006);
	diagnostic.push_back(0);
	diagnostic.push_back(99999);
	diagnostic.push_back(1006);
	diagnostic.push_back(227);
	diagnostic.push_back(274);
	diagnostic.push_back(1105);
	diagnostic.push_back(1);
	diagnostic.push_back(99999);
	diagnostic.push_back(1105);
	diagnostic.push_back(1);
	diagnostic.push_back(280);
	diagnostic.push_back(1105);
	diagnostic.push_back(1);
	diagnostic.push_back(99999);
	diagnostic.push_back(1);
	diagnostic.push_back(225);
	diagnostic.push_back(225);
	diagnostic.push_back(225);
	diagnostic.push_back(1101);
	diagnostic.push_back(294);
	diagnostic.push_back(0);
	diagnostic.push_back(0);
	diagnostic.push_back(105);
	diagnostic.push_back(1);
	diagnostic.push_back(0);
	diagnostic.push_back(1105);
	diagnostic.push_back(1);
	diagnostic.push_back(99999);
	diagnostic.push_back(1106);
	diagnostic.push_back(0);
	diagnostic.push_back(300);
	diagnostic.push_back(1105);
	diagnostic.push_back(1);
	diagnostic.push_back(99999);
	diagnostic.push_back(1);
	diagnostic.push_back(225);
	diagnostic.push_back(225);
	diagnostic.push_back(225);
	diagnostic.push_back(1101);
	diagnostic.push_back(314);
	diagnostic.push_back(0);
	diagnostic.push_back(0);
	diagnostic.push_back(106);
	diagnostic.push_back(0);
	diagnostic.push_back(0);
	diagnostic.push_back(1105);
	diagnostic.push_back(1);
	diagnostic.push_back(99999);
	diagnostic.push_back(1008);
	diagnostic.push_back(677);
	diagnostic.push_back(677);
	diagnostic.push_back(224);
	diagnostic.push_back(1002);
	diagnostic.push_back(223);
	diagnostic.push_back(2);
	diagnostic.push_back(223);
	diagnostic.push_back(1005);
	diagnostic.push_back(224);
	diagnostic.push_back(329);
	diagnostic.push_back(101);
	diagnostic.push_back(1);
	diagnostic.push_back(223);
	diagnostic.push_back(223);
	diagnostic.push_back(7);
	diagnostic.push_back(677);
	diagnostic.push_back(677);
	diagnostic.push_back(224);
	diagnostic.push_back(102);
	diagnostic.push_back(2);
	diagnostic.push_back(223);
	diagnostic.push_back(223);
	diagnostic.push_back(1006);
	diagnostic.push_back(224);
	diagnostic.push_back(344);
	diagnostic.push_back(101);
	diagnostic.push_back(1);
	diagnostic.push_back(223);
	diagnostic.push_back(223);
	diagnostic.push_back(108);
	diagnostic.push_back(677);
	diagnostic.push_back(677);
	diagnostic.push_back(224);
	diagnostic.push_back(1002);
	diagnostic.push_back(223);
	diagnostic.push_back(2);
	diagnostic.push_back(223);
	diagnostic.push_back(1006);
	diagnostic.push_back(224);
	diagnostic.push_back(359);
	diagnostic.push_back(1001);
	diagnostic.push_back(223);
	diagnostic.push_back(1);
	diagnostic.push_back(223);
	diagnostic.push_back(7);
	diagnostic.push_back(677);
	diagnostic.push_back(226);
	diagnostic.push_back(224);
	diagnostic.push_back(1002);
	diagnostic.push_back(223);
	diagnostic.push_back(2);
	diagnostic.push_back(223);
	diagnostic.push_back(1005);
	diagnostic.push_back(224);
	diagnostic.push_back(374);
	diagnostic.push_back(1001);
	diagnostic.push_back(223);
	diagnostic.push_back(1);
	diagnostic.push_back(223);
	diagnostic.push_back(1107);
	diagnostic.push_back(677);
	diagnostic.push_back(226);
	diagnostic.push_back(224);
	diagnostic.push_back(1002);
	diagnostic.push_back(223);
	diagnostic.push_back(2);
	diagnostic.push_back(223);
	diagnostic.push_back(1005);
	diagnostic.push_back(224);
	diagnostic.push_back(389);
	diagnostic.push_back(1001);
	diagnostic.push_back(223);
	diagnostic.push_back(1);
	diagnostic.push_back(223);
	diagnostic.push_back(107);
	diagnostic.push_back(226);
	diagnostic.push_back(677);
	diagnostic.push_back(224);
	diagnostic.push_back(102);
	diagnostic.push_back(2);
	diagnostic.push_back(223);
	diagnostic.push_back(223);
	diagnostic.push_back(1005);
	diagnostic.push_back(224);
	diagnostic.push_back(404);
	diagnostic.push_back(1001);
	diagnostic.push_back(223);
	diagnostic.push_back(1);
	diagnostic.push_back(223);
	diagnostic.push_back(1108);
	diagnostic.push_back(226);
	diagnostic.push_back(677);
	diagnostic.push_back(224);
	diagnostic.push_back(1002);
	diagnostic.push_back(223);
	diagnostic.push_back(2);
	diagnostic.push_back(223);
	diagnostic.push_back(1006);
	diagnostic.push_back(224);
	diagnostic.push_back(419);
	diagnostic.push_back(101);
	diagnostic.push_back(1);
	diagnostic.push_back(223);
	diagnostic.push_back(223);
	diagnostic.push_back(107);
	diagnostic.push_back(226);
	diagnostic.push_back(226);
	diagnostic.push_back(224);
	diagnostic.push_back(102);
	diagnostic.push_back(2);
	diagnostic.push_back(223);
	diagnostic.push_back(223);
	diagnostic.push_back(1005);
	diagnostic.push_back(224);
	diagnostic.push_back(434);
	diagnostic.push_back(1001);
	diagnostic.push_back(223);
	diagnostic.push_back(1);
	diagnostic.push_back(223);
	diagnostic.push_back(108);
	diagnostic.push_back(677);
	diagnostic.push_back(226);
	diagnostic.push_back(224);
	diagnostic.push_back(1002);
	diagnostic.push_back(223);
	diagnostic.push_back(2);
	diagnostic.push_back(223);
	diagnostic.push_back(1006);
	diagnostic.push_back(224);
	diagnostic.push_back(449);
	diagnostic.push_back(101);
	diagnostic.push_back(1);
	diagnostic.push_back(223);
	diagnostic.push_back(223);
	diagnostic.push_back(108);
	diagnostic.push_back(226);
	diagnostic.push_back(226);
	diagnostic.push_back(224);
	diagnostic.push_back(102);
	diagnostic.push_back(2);
	diagnostic.push_back(223);
	diagnostic.push_back(223);
	diagnostic.push_back(1006);
	diagnostic.push_back(224);
	diagnostic.push_back(464);
	diagnostic.push_back(1001);
	diagnostic.push_back(223);
	diagnostic.push_back(1);
	diagnostic.push_back(223);
	diagnostic.push_back(1007);
	diagnostic.push_back(226);
	diagnostic.push_back(226);
	diagnostic.push_back(224);
	diagnostic.push_back(1002);
	diagnostic.push_back(223);
	diagnostic.push_back(2);
	diagnostic.push_back(223);
	diagnostic.push_back(1005);
	diagnostic.push_back(224);
	diagnostic.push_back(479);
	diagnostic.push_back(101);
	diagnostic.push_back(1);
	diagnostic.push_back(223);
	diagnostic.push_back(223);
	diagnostic.push_back(8);
	diagnostic.push_back(677);
	diagnostic.push_back(226);
	diagnostic.push_back(224);
	diagnostic.push_back(1002);
	diagnostic.push_back(223);
	diagnostic.push_back(2);
	diagnostic.push_back(223);
	diagnostic.push_back(1006);
	diagnostic.push_back(224);
	diagnostic.push_back(494);
	diagnostic.push_back(101);
	diagnostic.push_back(1);
	diagnostic.push_back(223);
	diagnostic.push_back(223);
	diagnostic.push_back(1007);
	diagnostic.push_back(226);
	diagnostic.push_back(677);
	diagnostic.push_back(224);
	diagnostic.push_back(102);
	diagnostic.push_back(2);
	diagnostic.push_back(223);
	diagnostic.push_back(223);
	diagnostic.push_back(1006);
	diagnostic.push_back(224);
	diagnostic.push_back(509);
	diagnostic.push_back(101);
	diagnostic.push_back(1);
	diagnostic.push_back(223);
	diagnostic.push_back(223);
	diagnostic.push_back(7);
	diagnostic.push_back(226);
	diagnostic.push_back(677);
	diagnostic.push_back(224);
	diagnostic.push_back(1002);
	diagnostic.push_back(223);
	diagnostic.push_back(2);
	diagnostic.push_back(223);
	diagnostic.push_back(1005);
	diagnostic.push_back(224);
	diagnostic.push_back(524);
	diagnostic.push_back(101);
	diagnostic.push_back(1);
	diagnostic.push_back(223);
	diagnostic.push_back(223);
	diagnostic.push_back(107);
	diagnostic.push_back(677);
	diagnostic.push_back(677);
	diagnostic.push_back(224);
	diagnostic.push_back(102);
	diagnostic.push_back(2);
	diagnostic.push_back(223);
	diagnostic.push_back(223);
	diagnostic.push_back(1005);
	diagnostic.push_back(224);
	diagnostic.push_back(539);
	diagnostic.push_back(101);
	diagnostic.push_back(1);
	diagnostic.push_back(223);
	diagnostic.push_back(223);
	diagnostic.push_back(1008);
	diagnostic.push_back(677);
	diagnostic.push_back(226);
	diagnostic.push_back(224);
	diagnostic.push_back(1002);
	diagnostic.push_back(223);
	diagnostic.push_back(2);
	diagnostic.push_back(223);
	diagnostic.push_back(1005);
	diagnostic.push_back(224);
	diagnostic.push_back(554);
	diagnostic.push_back(1001);
	diagnostic.push_back(223);
	diagnostic.push_back(1);
	diagnostic.push_back(223);
	diagnostic.push_back(1008);
	diagnostic.push_back(226);
	diagnostic.push_back(226);
	diagnostic.push_back(224);
	diagnostic.push_back(1002);
	diagnostic.push_back(223);
	diagnostic.push_back(2);
	diagnostic.push_back(223);
	diagnostic.push_back(1006);
	diagnostic.push_back(224);
	diagnostic.push_back(569);
	diagnostic.push_back(1001);
	diagnostic.push_back(223);
	diagnostic.push_back(1);
	diagnostic.push_back(223);
	diagnostic.push_back(1108);
	diagnostic.push_back(226);
	diagnostic.push_back(226);
	diagnostic.push_back(224);
	diagnostic.push_back(102);
	diagnostic.push_back(2);
	diagnostic.push_back(223);
	diagnostic.push_back(223);
	diagnostic.push_back(1005);
	diagnostic.push_back(224);
	diagnostic.push_back(584);
	diagnostic.push_back(101);
	diagnostic.push_back(1);
	diagnostic.push_back(223);
	diagnostic.push_back(223);
	diagnostic.push_back(1107);
	diagnostic.push_back(226);
	diagnostic.push_back(677);
	diagnostic.push_back(224);
	diagnostic.push_back(1002);
	diagnostic.push_back(223);
	diagnostic.push_back(2);
	diagnostic.push_back(223);
	diagnostic.push_back(1005);
	diagnostic.push_back(224);
	diagnostic.push_back(599);
	diagnostic.push_back(1001);
	diagnostic.push_back(223);
	diagnostic.push_back(1);
	diagnostic.push_back(223);
	diagnostic.push_back(8);
	diagnostic.push_back(226);
	diagnostic.push_back(677);
	diagnostic.push_back(224);
	diagnostic.push_back(1002);
	diagnostic.push_back(223);
	diagnostic.push_back(2);
	diagnostic.push_back(223);
	diagnostic.push_back(1006);
	diagnostic.push_back(224);
	diagnostic.push_back(614);
	diagnostic.push_back(1001);
	diagnostic.push_back(223);
	diagnostic.push_back(1);
	diagnostic.push_back(223);
	diagnostic.push_back(1108);
	diagnostic.push_back(677);
	diagnostic.push_back(226);
	diagnostic.push_back(224);
	diagnostic.push_back(102);
	diagnostic.push_back(2);
	diagnostic.push_back(223);
	diagnostic.push_back(223);
	diagnostic.push_back(1005);
	diagnostic.push_back(224);
	diagnostic.push_back(629);
	diagnostic.push_back(1001);
	diagnostic.push_back(223);
	diagnostic.push_back(1);
	diagnostic.push_back(223);
	diagnostic.push_back(8);
	diagnostic.push_back(226);
	diagnostic.push_back(226);
	diagnostic.push_back(224);
	diagnostic.push_back(1002);
	diagnostic.push_back(223);
	diagnostic.push_back(2);
	diagnostic.push_back(223);
	diagnostic.push_back(1005);
	diagnostic.push_back(224);
	diagnostic.push_back(644);
	diagnostic.push_back(1001);
	diagnostic.push_back(223);
	diagnostic.push_back(1);
	diagnostic.push_back(223);
	diagnostic.push_back(1107);
	diagnostic.push_back(677);
	diagnostic.push_back(677);
	diagnostic.push_back(224);
	diagnostic.push_back(1002);
	diagnostic.push_back(223);
	diagnostic.push_back(2);
	diagnostic.push_back(223);
	diagnostic.push_back(1005);
	diagnostic.push_back(224);
	diagnostic.push_back(659);
	diagnostic.push_back(1001);
	diagnostic.push_back(223);
	diagnostic.push_back(1);
	diagnostic.push_back(223);
	diagnostic.push_back(1007);
	diagnostic.push_back(677);
	diagnostic.push_back(677);
	diagnostic.push_back(224);
	diagnostic.push_back(1002);
	diagnostic.push_back(223);
	diagnostic.push_back(2);
	diagnostic.push_back(223);
	diagnostic.push_back(1005);
	diagnostic.push_back(224);
	diagnostic.push_back(674);
	diagnostic.push_back(101);
	diagnostic.push_back(1);
	diagnostic.push_back(223);
	diagnostic.push_back(223);
	diagnostic.push_back(4);
	diagnostic.push_back(223);
	diagnostic.push_back(99);
	diagnostic.push_back(226);
	return diagnostic;
}

struct code{
	int type;
	bool first, second;
};

code toCode(int eger){
	code out;
	out.type = eger%100;
	out.first = (eger%1000)/100;
	out.second = (eger%10000)/1000;
	return out;
}

int parse(vector<int> vi){
	int i = 0;
	int prei = 1;
	code cod;
	int par1, par2, par3;
	while(true){
		/*if(i == prei){
			freopen("log5.txt","w",stdout);
			for(int j = 0; j < i; ++j){
				cout << vi[j] << endl;
			}
			return 3;
		}
		if(i >= vi.size()) return 2;*/ //debugging check
		cod = toCode(vi[i]);
		prei = i;
		
		if(cod.first) par1 = i+1;
		else par1 = vi[i+1];
		
		if(cod.second) par2 = i+2;
		else par2 = vi[i+2];
		
		par3 = vi[i+3];
		
		//cout << i << ": " << cod.second << cod.first << 0 << cod.type << endl; //print debugging
		//cout << '>' << vi[par1] << ' ' << vi[par2] << ' ' << vi[par3] << endl; //print debugging
		//cout << ">>" << cod.type << endl; //print debugging
		switch(cod.type){
			case 1:
			//Opcode 1 adds together numbers read from two positions and stores the result in a third position.
				vi[par3] = vi[par1] + vi[par2];
				i += 4;
				break;
			case 2:
			//Opcode 2 multiplies numbers read from two positions and stores the result in a third position.	
				vi[par3] = vi[par1] * vi[par2];
				i += 4;
				break;
			case 3:
			//Opcode 3 takes a single integer as input and saves it to the position given by its only parameter.
			//For example, the instruction 3 50 would take an input value and store it at address 50.
				cin >> vi[par1];
				i += 2;
				break;
			case 4:
			//Opcode 4 outputs the value of its only parameter.
			//For example, the instruction 4 50 would output the value at address 50.
				cout << vi[par1] << endl;
				i += 2;
				break;
			case 5:
			//Opcode 5 is jump-if-true: if the first parameter is non-zero
			//it sets the instruction pointer to the value from the second parameter.
				i += 3;
				if(vi[par1]) i = vi[par2];
				break;
			case 6:
			//Opcode 6 is jump-if-false: if the first parameter is zero
			//it sets the instruction pointer to the value from the second parameter.
				i += 3;
				if(!vi[par1]) i = vi[par2];
				break;
			case 7:
			//Opcode 7 is less than: if the first parameter is less than the second parameter
			//it stores 1 in the position given by the third parameter
			//Otherwise, it stores 0.
				i += 4;
				if(vi[par1] < vi[par2]) vi[par3] = 1;
				else vi[par3] = 0;
				break;
			case 8:
			//Opcode 8 is equals: if the first parameter is equal to the second parameter
			//it stores 1 in the position given by the third parameter
			//Otherwise, it stores 0.
				i += 4;
				if(vi[par1] == vi[par2]) vi[par3] = 1;
				else vi[par3] = 0;
				break;
			case 99:
				return 0;
				break;
			default:
				return 1;
				break;
		}
	}
}
int main(){
	vector<int> diagnostic;
	int n;
	diagnostic = buildDiag();
	cout << parse(diagnostic) << endl; //debugging, prints parse() return
	return 0;
}
